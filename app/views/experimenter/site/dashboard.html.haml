!!!
%head
  =stylesheet_link_tag "viewer"
  =javascript_include_tag "jquery"
  =javascript_include_tag "json2", "underscore", "backbone", "backbone.rails"
  =javascript_include_tag "polymaps/polymaps.js"
  =javascript_include_tag "http://github.com/simplegeo/polymaps/raw/v2.3.0/lib/raphaeljs/icons.js"

%body
  #map
  #user-panel.panel
    %li Welcome <strong>#{current_user.full_name}</strong>
    %li <a href="#">Your details</a>
    %li <a href="#">Help</a>
    %li #{link_to "Sign out", destroy_user_session_path}
  #travel-panel.panel
    #fixes-placard.placard
      .number x
      .title fixes
    #trips-placard.placard
      .number x
      .title trips
    #activities-placard.placard
      .number x
      .title activities
    
  :javascript
    /* MODELS */
    window.TravelFix = Backbone.Model.extend({
      name: 'travel_fix'
    });
    
    /* COLLECTIONS */
    window.TravelFixes = Backbone.Collection.extend({
      name: 'travel_fixes',
      model: TravelFix,
      url: '/api/travel_fixes.json'
    });
    window.LandmarkVisits = Backbone.Collection.extend({
      name: 'landmark_visits',
      model: LandmarkVisit,
      url: '/api/landmark_visits.json'
    });
    window.DirectionDistanceEstimates = Backbone.Collection.extend({
      name: 'direction_distance_estimates',
      model: DirectionDistanceEstimate,
      url: '/api/direction_distance_estimates.json'
    });
    
    window.landmarks = new Landmarks;
    window.landmarkVisits = new LandmarkVisits;
    window.directionDistanceEstimates = new DirectionDistanceEstimates;
    
    /* VIEWS */
    window.LandmarksPlacard = Backbone.View.extend({
      id: 'landmarks-placard',
      initialize: function() {
        landmarks.bind('refresh', this.render);
        landmarks.refresh(#{current_user.landmarks.to_json.html_safe});
      },
      render: function() {
        $('#landmarks-placard .number').text(landmarks.length);
        if (landmarks.length == 1) $('#landmarks-placard .title').text('landmark');
      } 
    });
    window.VisitsPlacard = Backbone.View.extend({
      id: 'visits-placard',
      initialize: function() {
        landmarkVisits.bind('refresh', this.render);
        landmarkVisits.refresh(#{current_user.landmark_visits.to_json.html_safe});
      },
      render: function() {
        $('#visits-placard .number').text(landmarkVisits.length);
        if (landmarkVisits.length == 1) $('#visits-placard .title').text('visit');
      } 
    });
    window.EstimatesPlacard = Backbone.View.extend({
      id: 'estimates-placard',
      initialize: function() {
        directionDistanceEstimates.bind('refresh', this.render);
        directionDistanceEstimates.refresh(#{current_user.direction_distance_estimates.to_json.html_safe});
      },
      render: function() {
        $('#estimates-placard .number').text(directionDistanceEstimates.length);
        if (directionDistanceEstimates.length == 1) $('#estimates-placard .title').text('estimate');
      } 
    });
    
    window.landmarksPlacard = new LandmarksPlacard;
    window.visitsPlacard = new VisitsPlacard;
    window.estimatesPlacard = new EstimatesPlacard;

  :javascript
    var po = org.polymaps;
  
    var map = po.map()
        .container(document.getElementById("map").appendChild(po.svg("svg")))
        .add(po.interact())
        .add(po.hash());
      
    map.add(po.image()
        .url(po.url("http://{S}tile.cloudmade.com"
        + "/7edf224d2b714c238a8ed621091d63bc"
        + "/998/256/{Z}/{X}/{Y}.png")
        .hosts(["a.", "b.", "c.", ""])));
      
    map.add(po.compass()
        .pan("none"));
    
  
    map.add(po.geoJson()
        .features(#{@landmarksGeoJson})
        .clip(false)
        .on("load", loadLandmarks)
        .id("landmark-layer")
        .scale("fixed"));
  
    function loadLandmarks(e) { 
      for (var i = 0; i < e.features.length; i++) {
        var f = e.features[i],
            c = f.element,
            g = f.element = po.svg("g");
        g.appendChild(icons.marker());
        g.setAttribute("transform", c.getAttribute("transform"));
        c.parentNode.replaceChild(g, c);
        f.element.appendChild(po.svg("title")
         .appendChild(document.createTextNode(f.data.name))
         .parentNode);
      }
    }